<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/1/2021 3:59:18 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DANIL0110"
  DTS:CreatorName="DANIL0110\Danil"
  DTS:DTSID="{82623EC5-F3DF-47A7-B477-41C331A8F350}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.157"
  DTS:LocaleID="8192"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="13"
  DTS:VersionGUID="{4EE7AD32-E644-4905-870B-9D5E42F22132}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{974ED8EA-B18E-4E93-8272-75134FC79A9E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="var_max_id">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Load Weather"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Задача потока данных"
      DTS:DTSID="{751235F6-20E3-4E2F-8419-8574BCF28895}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Weather"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load Weather\Auto increment DateID"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Включает и выполняет пользовательский код скрипта. Пример: применение бизнес-правила, ограничивающего диапазон допустимых значений в столбце &quot;income&quot;, или суммирование значений в двух столбцах и вычисление среднего значения суммы.Корпорация Майкрософт (Microsoft Corporation). Microsoft SQL Server. Корпорация Майкрософт (Microsoft Corporation). Все права защищены. http://www.microsoft.com/sql/support12"
              description="Включает и выполняет пользовательский код скрипта. Пример: применение бизнес-правила, ограничивающего диапазон допустимых значений в столбце &quot;income&quot;, или суммирование значений в двух столбцах и вычисление среднего значения суммы."
              name="Auto increment DateID"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Хранит исходный код компонента"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_fddd7f1180644c349336068ac189dea9.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0BFDDDD7-9627-4542-BC25-48033312DEC0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_fddd7f1180644c349336068ac189dea9</RootNamespace>
    <AssemblyName>SC_fddd7f1180644c349336068ac189dea9</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    private int counter;
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
        counter = 1;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Вход0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Вход0_ProcessInputRow(Вход0Buffer Row)
    {
        /*
         * Add your code here
         */
        Row.RowNumber = counter;
        counter++;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Вход0Buffer: ScriptBuffer

{
    public Вход0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 RowNumber
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool RowNumber_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("Свойство IsNull не может иметь значение FALSE. Присвойте столбцу какое-либо значение.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Вход 0", StringComparison.Ordinal))
        {
            Вход0_ProcessInput(new Вход0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Вход0_ProcessInput(Вход0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Вход0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Вход0_ProcessInputRow(Вход0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fddd7f1180644c349336068ac189dea9.Properties.Settings.get_Default():SC_fddd7f1180644c349336068ac189dea9.Properties.Sett" +
    "ings")]

namespace SC_fddd7f1180644c349336068ac189dea9.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_fddd7f1180644c349336068ac189dea9</msb:CodeName>
    <msb:DisplayName>SC_fddd7f1180644c349336068ac189dea9</msb:DisplayName>
    <msb:ProjectId>{3B43457E-5932-4ED9-8B1F-CFB7CD1CCCE7}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_fddd7f1180644c349336068ac189dea9.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_fddd7f1180644c349336068ac189dea9")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_fddd7f1180644c349336068ac189dea9")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fddd7f1180644c349336068ac189dea9.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fddd7f1180644c349336068ac189dea9.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fddd7f1180644c349336068ac189dea9.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_fddd7f1180644c349336068ac189dea9.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_fddd7f1180644c349336068ac189dea9.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Хранит представление компонента в двоичном коде"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_fddd7f1180644c349336068ac189dea9.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAF1ItmAAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAA1jEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIQxAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA3BEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC4
MQAAAAAAAEgAAAACAAUAwCEAAAwPAAABAAAAAAAAAMwwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAADoCKBAAAAoCF30BAAAEKh4CKBEAAAoqbgMCewEAAARvBwAA
BgICewEAAAQXWH0BAAAEKh4CKAwAAAYqKgIDBAUoEgAACipSAnsTAAAKAnsUAAAKFpRvFQAACio6
AhYDjBoAAAEoFgAACioiAhYoFwAACipaAywIAhYoGAAACipyAQAAcHMZAAAKeh4CKBoAAAoqHgIo
GwAACip+AigcAAAKAgJzEAAABn0CAAAEAgJzEQAABn0DAAAEKpIEcq4AAHAabx0AAAosFQIFAgMo
HgAACg4EcwUAAAZvDgAABipKKwcCA28PAAAGA28KAAAGLfEqBio6AigfAAAKAgN9BAAABCo6Aigf
AAAKAgN9BQAABCoeAigfAAAKKq5+BgAABC0ecrwAAHDQBwAAAiggAAAKbyEAAApzIgAACoAGAAAE
fgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4CKCMAAAoqLnMXAAAGgAgAAAQqQlNKQgEAAQAA
AAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAZAUAACN+AADQBQAAVAYAACNTdHJpbmdzAAAAACQM
AAAwAQAAI1VTAFQNAAAQAAAAI0dVSUQAAABkDQAAqAEAACNCbG9iAAAAAAAAAAIAAAFXFaABCQEA
AAD6ATMAFgAAAQAAACAAAAAIAAAACAAAABgAAAAPAAAAIwAAABAAAAADAAAABQAAAAgAAAABAAAA
BAAAAAEAAAAAAPMCAQAAAAAABgDtAYMEBgCBAoMEBgA5AXAEDwD3BAAABgBmAZ4DBgDQAZ4DBgCx
AZ4DBgBoAp4DBgANAp4DBgAmAp4DBgB9AZ4DBgCYAbwCCgBBAoYACgA6BIYADgArBIYACgDnA4YA
CgC9BYYABgCABVYDBgAcAXAEBgBLBKMEBgDbA4kDEgDsAN0CEgBNAd0CEgDUAHQDBgABAYMEBgAE
AFYDBgCwA1YDBgDWAlYDBgDKA1YDBgCnAFYDBgBYAFYDBgBIBp4DAAAAAC4AAAAAAAEAAQABABAA
aQMAABAAAQABAAEAEAAbBAAAOQACAAUAAQAQAJ8FAABFAAIADAABABAAdAUAAEkABAAQAAEAEAA1
BQAASQAFABEAAAAQAKoEBgVJAAYAEgAAARAAZAUGBWEACAAWAAEAWwR1AAYAdAV4AAYANQV8AAEA
rQWAAAEArQWAABEAXQOEABEAxACIABEASACMAFAgAAAAAMYAnwIGAAEAXyAAAAAAxgCqAgYAAQBn
IAAAAADGACIGkAABAIMgAAAAAIYYYwQGAAIAiyAAAAAAhhhjBBsAAgCWIAAAAACGCP8DlgAFAKsg
AAAAAIYIDQQBAAUAuiAAAAAAhggbAz0ABgDDIAAAAACGCDADmgAGANogAAAAAIYAPAY9AAcA4iAA
AAAAhgCHBT0ABwDqIAAAAACGGGMEBgAHAAohAAAAAMYAFQafAAcALyEAAAAAxgELBpAACwBCIQAA
AADGASIGkAAMAEQhAAAAAIYYYwSpAA0AUyEAAAAAhhhjBKkADgBiIQAAAACDGGMEBgAPAGohAAAA
AJMIRwSvAA8AliEAAAAAkwisALQADwCdIQAAAACTCLgAuQAPAKUhAAAAAJYIkwW/ABAArCEAAAAA
hhhjBAYAEAC0IQAAAACRGGkExAAQAAAAAQBABgAAAQBABAAAAgA/BQAAAwD1AwAAAQC2AgAAAQC2
AgAAAQA3AAAAAgB8AAAAAwBABAAABAD1AwAAAQBABAAAAQBABgAAAQDDBQAAAQDDBQAAAQC2AgkA
YwQBABEAYwQGABkAYwQKACkAYwQQADEAYwQQADkAYwQQAEEAYwQQAEkAYwQQAFEAYwQQAFkAYwQQ
AGEAYwQQAGkAYwQGAJkAYwQGALkAYwQVAMkAYwQGAIkAnwIGAIkAqgIGAHEAYwQbAHEAQAQlAHEA
PwUpAHkAAQAtAHEATQMyAHEAPgM4AHEARQMBANkAYwQQAHEAPAY9AHEAhwU9AIkAYwQGAOEAbQVB
AIkAUwVIAJEAYwQGAPEAagBOAPEARAZVAKEAYwRbAMEAYwQGAC4ACwDfAC4AEwDoAC4AGwAHAS4A
IwAQAS4AKwA5AS4AMwA5AS4AOwA5AS4AQwAQAS4ASwA/AS4AUwA5AS4AWwBWAUMAYwCgAWkAcwAH
AYkAcwAHAeMAawCgAQEBewCgAQMAAQAHAAMACAAFAAAAEQTIAAAANAPMAAAASwTQAAAAzADVAAAA
lwXaAAIABgADAAEABwADAAIACAAFAAEACQAFAAIAEwAHAAIAFAAJAAEAFQAJAAIAFgALAASAAAAB
AAAAAAAAAAAAAAAAAAoAAAAEAAAAAAAAAAAAAABjAD8AAAAAAA8AAAAAAAAAAAAAAGwAzQUAAAAA
DwAAAAAAAAAAAAAAbADqBQAAAAAEAAAAAAAAAAAAAABjAFYDAAAAAAAAAAABAAAAtAQAAAAAAEdl
dEludDMyAFNDX2ZkZGQ3ZjExODA2NDRjMzQ5MzM2MDY4YWMxODlkZWE5ADxNb2R1bGU+AElucHV0
SUQAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAElucHV0TmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdl
dF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdz
QmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1
Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RF
eGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAFN5c3RlbS5Db21w
b25lbnRNb2RlbABTQ19mZGRkN2YxMTgwNjQ0YzM0OTMzNjA2OGFjMTg5ZGVhOS5kbGwAZ2V0X1Jv
d051bWJlcl9Jc051bGwAc2V0X1Jvd051bWJlcl9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0
ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xv
YmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0
cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAAZ2V0X1Jv
d051bWJlcgBzZXRfUm93TnVtYmVyANCS0YXQvtC0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3Jp
cHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBjb3VudGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0u
RGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3Vy
Y2VzAFNDX2ZkZGQ3ZjExODA2NDRjMzQ5MzM2MDY4YWMxODlkZWE5LlByb3BlcnRpZXMuUmVzb3Vy
Y2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19mZGRkN2YxMTgwNjQ0YzM0OTMzNjA2OGFj
MTg5ZGVhOS5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVt
bkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAE9iamVjdABFbmRPZlJvd3NldABn
ZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQA
TWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5l
SG9zdADQktGF0L7QtDBfUHJvY2Vzc0lucHV0ANCS0YXQvtC0MF9Qcm9jZXNzSW5wdXRSb3cATmV4
dFJvdwBnZXRfQXNzZW1ibHkAAAAAAICrIQQyBD4EOQRBBEIEMgQ+BCAASQBzAE4AdQBsAGwAIAA9
BDUEIAA8BD4ENgQ1BEIEIAA4BDwENQRCBEwEIAA3BD0EMARHBDUEPQQ4BDUEIABGAEEATABTAEUA
LgAgAB8EQAQ4BEEEMgQ+BDkEQgQ1BCAAQQRCBD4EOwQxBEYEQwQgADoEMAQ6BD4ENQQtADsEOAQx
BD4EIAA3BD0EMARHBDUEPQQ4BDUELgABDRIERQQ+BDQEIAAwAAFxUwBDAF8AZgBkAGQAZAA3AGYA
MQAxADgAMAA2ADQANABjADMANAA5ADMAMwA2ADAANgA4AGEAYwAxADgAOQBkAGUAYQA5AC4AUABy
AG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAEkzUTpmDsBJrAN8Q9GNu74A
BCABAQgDIAABBSABARERBCABAQ4FIAEBEVkJIAMBEj0dCBJBAwYSPQMGHQgEIAEICAUgAgEIHAQg
AQIIAyAAAgYgAgIOEXUFIAEdCAgGAAESeRF9BSAAEoCBByACAQ4SgIEIt3pcVhk04IkIiYRdzYCA
zJECBggDBhIUAwYSGAMGEkUDBhJRAwYSVQMGEiAFIAEBEgwDIAAIBCABAQIJIAQBCA4SPRJBBSAB
ARJFBAAAElEEAAASVQUAAQESVQQAABIgAwAAAQMoAAgDKAACBAgAElEECAASVQQIABIgCAEACAAA
AAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19mZGRkN2Yx
MTgwNjQ0YzM0OTMzNjA2OGFjMTg5ZGVhOQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIxAABJ
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5O
RVQgRnJhbWV3b3JrIDQuNwQBAAAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2Vz
LlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRy
YWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50
aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAKwxAAAAAAAAAAAAAMYxAAAAIAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAC4MQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxs
AAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AZgBkAGQAZAA3AGYAMQAxADgAMAA2ADQANABjADMANAA5ADMAMwA2ADAANgA4AGEA
YwAxADgAOQBkAGUAYQA5AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBmAGQAZABkADcA
ZgAxADEAOAAwADYANAA0AGMAMwA0ADkAMwAzADYAMAA2ADgAYQBjADEAOAA5AGQAZQBhADkALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGYA
ZABkAGQANwBmADEAMQA4ADAANgA0ADQAYwAzADQAOQAzADMANgAwADYAOABhAGMAMQA4ADkAZABl
AGEAOQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBmAGQA
ZABkADcAZgAxADEAOAAwADYANAA0AGMAMwA0ADkAMwAzADYAMAA2ADgAYQBjADEAOAA5AGQAZQBh
ADkAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAANgxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Указывает проект средств Microsoft Visual Studio для приложений. Имена проектов должны быть уникальными в пределах пакета."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_fddd7f1180644c349336068ac189dea9</property>
                <property
                  dataType="System.String"
                  description="Указывает язык программирования, используемый скриптом."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Указывает переменные, доступные только для чтения (через запятую)."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Указывает переменные, доступные для чтения и записи (через запятую)."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Список имеющихся в скрипте точек останова."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Контрольная сумма для сопоставления метаданных компонента со скомпилированным кодом."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">B9</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Load Weather\Auto increment DateID.Inputs[Вход 0]"
                  hasSideEffects="true"
                  name="Вход 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Weather\Auto increment DateID.Inputs[Вход 0].Columns[RowNumber]"
                      cachedDataType="i4"
                      cachedName="RowNumber"
                      lineageId="Package\Load Weather\DateID Column.Outputs[Выход производного столбца].Columns[RowNumber]"
                      usageType="readWrite" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Weather\Auto increment DateID.Outputs[Выход 0]"
                  name="Выход 0"
                  synchronousInputId="Package\Load Weather\Auto increment DateID.Inputs[Вход 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Weather\DateID Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Производный столбец;Корпорация Майкрософт. Microsoft SQL Server. (C) Корпорация Майкрософт (Microsoft Corporation). Все права защищены. http://www.microsoft.com/sql/support;0"
              description="Создает новые значения столбцов путем применения выражений к входным столбцам преобразования. Создает новые столбцы или перезаписывает существующие. Пример: объединение значений столбцов &quot;first name&quot; и &quot;last name&quot; и создание столбца &quot;full name&quot;."
              name="DateID Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load Weather\DateID Column.Inputs[Вход производного столбца]"
                  description="Ввод преобразования &quot;Производный столбец&quot;"
                  name="Вход производного столбца">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Weather\DateID Column.Outputs[Выход производного столбца]"
                  description="Выход по умолчанию преобразования &quot;Производный столбец&quot;"
                  exclusionGroup="1"
                  name="Выход производного столбца"
                  synchronousInputId="Package\Load Weather\DateID Column.Inputs[Вход производного столбца]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Weather\DateID Column.Outputs[Выход производного столбца].Columns[RowNumber]"
                      dataType="i4"
                      errorOrTruncationOperation="Вычисление"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Load Weather\DateID Column.Outputs[Выход производного столбца].Columns[RowNumber]"
                      name="RowNumber"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Выражение производного столбца"
                          name="Expression">0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Понятное выражение производного столбца"
                          expressionType="Notify"
                          name="FriendlyExpression">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load Weather\DateID Column.Outputs[Вывод ошибок производного столбца]"
                  description="Вывод ошибок преобразования &quot;Производный столбец&quot;"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Вывод ошибок производного столбца"
                  synchronousInputId="Package\Load Weather\DateID Column.Inputs[Вход производного столбца]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Weather\DateID Column.Outputs[Вывод ошибок производного столбца].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Weather\DateID Column.Outputs[Вывод ошибок производного столбца].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Weather\DateID Column.Outputs[Вывод ошибок производного столбца].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Weather\DateID Column.Outputs[Вывод ошибок производного столбца].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Weather\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="Назначение &quot;OLE DB&quot;;Корпорация Майкрософт. Microsoft SQL Server. (C) Корпорация Майкрософт (Microsoft Corporation). Все права защищены. http://www.microsoft.com/sql/support;4"
              description="Назначение &quot;OLE DB&quot;"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Время ожидания команды, в секундах. Величина 0 означает неограниченное время ожидания."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Указывает имя объекта базы данных, используемого для открытия набора строк."
                  name="OpenRowset">[dbo].[Weather]</property>
                <property
                  dataType="System.String"
                  description="Указывает переменную, содержащую имя объекта базы данных, используемого для открытия набора строк."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Команда SQL для выполнения."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Указывает кодовую страницу столбца, используемую, когда недоступны сведения о кодовой странице из источника данных."
                  name="DefaultCodePage">1251</property>
                <property
                  dataType="System.Boolean"
                  description="Вызывает безусловное использование значение свойства DefaultCodePage при описании символьных данных."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Указывает используемый режим доступа к базе данных."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Указывает, должны ли значения в столбцах идентификаторов копироваться в назначение. Если свойство имеет значение false, значения в столбцах идентификаторов будут созданы автоматически в месте назначения. Применяется только в том случае, если включена быстрая загрузка."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Указывает, будут ли в назначение вставляться значения NULL для столбцов, содержащих их. Значение false показывает, что если столбец имеет значение NULL, то в назначение будет вставлено его значение по умолчанию. Применяется только в случае, если включена быстрая загрузка."
                  name="FastLoadKeepNulls">true</property>
                <property
                  dataType="System.String"
                  description="Задает параметры быстрой загрузки. Применяется только в том случае, если включена быстрая загрузка."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Задает, когда выдаются сообщения о фиксации транзакции в ходе вставки данных. Значение 0 задает, что по окончании вставки данных будет выдано одно сообщение о фиксации транзакции. Применяется только в том случае, если включена быстрая загрузка."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Weather\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="{DC3505A1-8917-420B-821D-3CC737F62B7B}:external"
                  connectionManagerRefId="Project.ConnectionManagers[DANIL0110.weather_db]"
                  description="Соединение OLE DB среды выполнения, используемое для доступа к базе данных."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;]"
                  errorOrTruncationOperation="Вставить"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Вход назначения &quot;OLE DB&quot;">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].Columns[Temperature]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Temperature"
                      externalMetadataColumnId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[Temperature]"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].Columns[Temperature]" />
                    <inputColumn
                      refId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].Columns[DewPoint]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="DewPoint"
                      externalMetadataColumnId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[DewPoint]"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].Columns[DewPoint]" />
                    <inputColumn
                      refId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].Columns[Humidity]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Humidity"
                      externalMetadataColumnId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[Humidity]"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].Columns[Humidity]" />
                    <inputColumn
                      refId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].Columns[SeaLvlPressure]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="SeaLvlPressure"
                      externalMetadataColumnId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[SeaLvlPressure]"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].Columns[SeaLvlPressure]" />
                    <inputColumn
                      refId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].Columns[Visibility]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Visibility"
                      externalMetadataColumnId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[Visibility]"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].Columns[Visibility]" />
                    <inputColumn
                      refId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].Columns[Wind]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Wind"
                      externalMetadataColumnId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[Wind]"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].Columns[Wind]" />
                    <inputColumn
                      refId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].Columns[RowNumber]"
                      cachedDataType="i4"
                      cachedName="RowNumber"
                      externalMetadataColumnId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[DateID]"
                      lineageId="Package\Load Weather\DateID Column.Outputs[Выход производного столбца].Columns[RowNumber]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[WeatherID]"
                      dataType="i4"
                      name="WeatherID" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[DateID]"
                      dataType="i4"
                      name="DateID" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[Temperature]"
                      dataType="i4"
                      name="Temperature" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[DewPoint]"
                      dataType="i4"
                      name="DewPoint" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[Humidity]"
                      dataType="i4"
                      name="Humidity" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[SeaLvlPressure]"
                      dataType="r8"
                      name="SeaLvlPressure" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[Visibility]"
                      dataType="i4"
                      name="Visibility" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[Wind]"
                      dataType="i4"
                      name="Wind" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Weather\OLE DB Destination.Outputs[Вывод ошибок назначения &quot;OLE DB&quot;]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Вывод ошибок назначения &quot;OLE DB&quot;"
                  synchronousInputId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Weather\OLE DB Destination.Outputs[Вывод ошибок назначения &quot;OLE DB&quot;].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Weather\OLE DB Destination.Outputs[Вывод ошибок назначения &quot;OLE DB&quot;].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Weather\OLE DB Destination.Outputs[Вывод ошибок назначения &quot;OLE DB&quot;].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Weather\OLE DB Destination.Outputs[Вывод ошибок назначения &quot;OLE DB&quot;].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Weather\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="Источник &quot;OLE DB&quot;;Корпорация Майкрософт. Microsoft SQL Server. (C) Корпорация Майкрософт (Microsoft Corporation). Все права защищены. http://www.microsoft.com/sql/support;7"
              description="Источник &quot;OLE DB&quot;"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Время ожидания команды, в секундах. Величина 0 означает неограниченное время ожидания."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Указывает имя объекта базы данных, используемого для открытия набора строк."
                  name="OpenRowset">[dbo].[austin_weather]</property>
                <property
                  dataType="System.String"
                  description="Указывает переменную, содержащую имя объекта базы данных, используемого для открытия набора строк."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Команда SQL для выполнения."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="Переменная, содержащая команду SQL для выполнения."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Указывает кодовую страницу столбца, используемую, когда недоступны сведения о кодовой странице из источника данных."
                  name="DefaultCodePage">1251</property>
                <property
                  dataType="System.Boolean"
                  description="Вызывает безусловное использование значение свойства DefaultCodePage при описании символьных данных."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Указывает используемый режим доступа к базе данных."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="Сопоставления между параметрами в команде SQL и переменными."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Weather\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="{DC3505A1-8917-420B-821D-3CC737F62B7B}:external"
                  connectionManagerRefId="Project.ConnectionManagers[DANIL0110.weather_db]"
                  description="Соединение OLE DB среды выполнения, используемое для доступа к базе данных."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;]"
                  name="Выход источника &quot;OLE DB&quot;">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].Columns[Temperature]"
                      dataType="wstr"
                      errorOrTruncationOperation="Преобразование"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[TempAvgF]"
                      length="8"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].Columns[Temperature]"
                      name="Temperature"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].Columns[DewPoint]"
                      dataType="wstr"
                      errorOrTruncationOperation="Преобразование"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[DewPointAvgF]"
                      length="8"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].Columns[DewPoint]"
                      name="DewPoint"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].Columns[Humidity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Преобразование"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[HumidityAvgPercent]"
                      length="8"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].Columns[Humidity]"
                      name="Humidity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].Columns[SeaLvlPressure]"
                      dataType="wstr"
                      errorOrTruncationOperation="Преобразование"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[SeaLevelPressureAvgInches]"
                      length="8"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].Columns[SeaLvlPressure]"
                      name="SeaLvlPressure"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].Columns[Visibility]"
                      dataType="wstr"
                      errorOrTruncationOperation="Преобразование"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[VisibilityAvgMiles]"
                      length="8"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].Columns[Visibility]"
                      name="Visibility"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].Columns[Wind]"
                      dataType="wstr"
                      errorOrTruncationOperation="Преобразование"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[WindAvgMPH]"
                      length="8"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].Columns[Wind]"
                      name="Wind"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[Date]"
                      dataType="wstr"
                      length="10"
                      name="Date" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[TempHighF]"
                      dataType="wstr"
                      length="4"
                      name="TempHighF" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[TempAvgF]"
                      dataType="wstr"
                      length="8"
                      name="TempAvgF" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[TempLowF]"
                      dataType="wstr"
                      length="8"
                      name="TempLowF" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[DewPointHighF]"
                      dataType="wstr"
                      length="8"
                      name="DewPointHighF" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[DewPointAvgF]"
                      dataType="wstr"
                      length="8"
                      name="DewPointAvgF" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[DewPointLowF]"
                      dataType="wstr"
                      length="8"
                      name="DewPointLowF" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[HumidityHighPercent]"
                      dataType="wstr"
                      length="8"
                      name="HumidityHighPercent" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[HumidityAvgPercent]"
                      dataType="wstr"
                      length="8"
                      name="HumidityAvgPercent" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[HumidityLowPercent]"
                      dataType="wstr"
                      length="8"
                      name="HumidityLowPercent" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[SeaLevelPressureHighInches]"
                      dataType="wstr"
                      length="8"
                      name="SeaLevelPressureHighInches" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[SeaLevelPressureAvgInches]"
                      dataType="wstr"
                      length="8"
                      name="SeaLevelPressureAvgInches" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[SeaLevelPressureLowInches]"
                      dataType="wstr"
                      length="8"
                      name="SeaLevelPressureLowInches" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[VisibilityHighMiles]"
                      dataType="wstr"
                      length="8"
                      name="VisibilityHighMiles" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[VisibilityAvgMiles]"
                      dataType="wstr"
                      length="8"
                      name="VisibilityAvgMiles" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[VisibilityLowMiles]"
                      dataType="wstr"
                      length="8"
                      name="VisibilityLowMiles" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[WindHighMPH]"
                      dataType="wstr"
                      length="8"
                      name="WindHighMPH" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[WindAvgMPH]"
                      dataType="wstr"
                      length="8"
                      name="WindAvgMPH" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[WindGustMPH]"
                      dataType="wstr"
                      length="8"
                      name="WindGustMPH" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[PrecipitationSumInches]"
                      dataType="wstr"
                      length="8"
                      name="PrecipitationSumInches" />
                    <externalMetadataColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;].ExternalColumns[Events]"
                      dataType="wstr"
                      length="100"
                      name="Events" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load Weather\OLE DB Source.Outputs[Вывод ошибок источника &quot;OLE DB&quot;]"
                  isErrorOut="true"
                  name="Вывод ошибок источника &quot;OLE DB&quot;">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Вывод ошибок источника &quot;OLE DB&quot;].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Вывод ошибок источника &quot;OLE DB&quot;].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Вывод ошибок источника &quot;OLE DB&quot;].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Вывод ошибок источника &quot;OLE DB&quot;].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Вывод ошибок источника &quot;OLE DB&quot;].Columns[TempAvgF]"
                      dataType="wstr"
                      length="8"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Вывод ошибок источника &quot;OLE DB&quot;].Columns[TempAvgF]"
                      name="TempAvgF" />
                    <outputColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Вывод ошибок источника &quot;OLE DB&quot;].Columns[DewPointAvgF]"
                      dataType="wstr"
                      length="8"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Вывод ошибок источника &quot;OLE DB&quot;].Columns[DewPointAvgF]"
                      name="DewPointAvgF" />
                    <outputColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Вывод ошибок источника &quot;OLE DB&quot;].Columns[HumidityAvgPercent]"
                      dataType="wstr"
                      length="8"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Вывод ошибок источника &quot;OLE DB&quot;].Columns[HumidityAvgPercent]"
                      name="HumidityAvgPercent" />
                    <outputColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Вывод ошибок источника &quot;OLE DB&quot;].Columns[SeaLevelPressureAvgInches]"
                      dataType="wstr"
                      length="8"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Вывод ошибок источника &quot;OLE DB&quot;].Columns[SeaLevelPressureAvgInches]"
                      name="SeaLevelPressureAvgInches" />
                    <outputColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Вывод ошибок источника &quot;OLE DB&quot;].Columns[VisibilityAvgMiles]"
                      dataType="wstr"
                      length="8"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Вывод ошибок источника &quot;OLE DB&quot;].Columns[VisibilityAvgMiles]"
                      name="VisibilityAvgMiles" />
                    <outputColumn
                      refId="Package\Load Weather\OLE DB Source.Outputs[Вывод ошибок источника &quot;OLE DB&quot;].Columns[WindAvgMPH]"
                      dataType="wstr"
                      length="8"
                      lineageId="Package\Load Weather\OLE DB Source.Outputs[Вывод ошибок источника &quot;OLE DB&quot;].Columns[WindAvgMPH]"
                      name="WindAvgMPH" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load Weather.Paths[Выход 0]"
              endId="Package\Load Weather\OLE DB Destination.Inputs[Вход назначения &quot;OLE DB&quot;]"
              name="Выход 0"
              startId="Package\Load Weather\Auto increment DateID.Outputs[Выход 0]" />
            <path
              refId="Package\Load Weather.Paths[Выход источника &quot;OLE DB&quot;]"
              endId="Package\Load Weather\DateID Column.Inputs[Вход производного столбца]"
              name="Выход источника &quot;OLE DB&quot;"
              startId="Package\Load Weather\OLE DB Source.Outputs[Выход источника &quot;OLE DB&quot;]" />
            <path
              refId="Package\Load Weather.Paths[Выход производного столбца]"
              endId="Package\Load Weather\Auto increment DateID.Inputs[Вход 0]"
              name="Выход производного столбца"
              startId="Package\Load Weather\DateID Column.Outputs[Выход производного столбца]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate Weather"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Truncate Weather"
      DTS:DTSID="{FC79EF63-8A38-4DE3-987F-ABF0C8A682EF}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate Weather"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DC3505A1-8917-420B-821D-3CC737F62B7B}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [Weather]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Ограничение]"
      DTS:CreationName=""
      DTS:DTSID="{2E74E5BC-690D-45A5-87B3-5FC655EB62D7}"
      DTS:From="Package\Truncate Weather"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Ограничение"
      DTS:To="Package\Load Weather" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--В данном разделе CDATA содержатся сведения о макете пакета. В данном разделе содержатся сведения о координатах (x,y), ширине и высоте.-->
<!--В случае возникновения ошибки при редактировании этого раздела вручную его можно удалить. -->
<!--Пакет можно загрузить обычным образом, но прежние сведения о макете будут утеряны, и конструктор автоматически перераспределит элементы в области конструктора.-->
<Objects
  Version="8">
  <!--Все приведенные ниже узлы будут содержать свойства, не влияющие на поведение среды выполнения.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="148,42"
          Id="Package\Load Weather"
          TopLeft="235,165" />
        <NodeLayout
          Size="167,42"
          Id="Package\Truncate Weather"
          TopLeft="226,68" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Ограничение]"
          TopLeft="309.25,110">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Load Weather">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="154,42"
          Id="Package\Load Weather\DateID Column"
          TopLeft="257,171" />
        <NodeLayout
          Size="157,42"
          Id="Package\Load Weather\OLE DB Source"
          TopLeft="259,83" />
        <NodeLayout
          Size="190,42"
          Id="Package\Load Weather\Auto increment DateID"
          TopLeft="241,261" />
        <NodeLayout
          Size="177,42"
          Id="Package\Load Weather\OLE DB Destination"
          TopLeft="249,362" />
        <EdgeLayout
          Id="Package\Load Weather.Paths[Выход 0]"
          TopLeft="336.75,303">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59"
              Start="0,0"
              End="0,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Weather.Paths[Выход производного столбца]"
          TopLeft="335,213">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Weather.Paths[Выход источника &quot;OLE DB&quot;]"
          TopLeft="335.75,125">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46"
              Start="0,0"
              End="0,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load Weather\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load Weather\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>